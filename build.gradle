plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.netflix.dgs.codegen" version "5.7.0"
    id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.umcs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.netflix.graphql.dgs:graphql-dgs-pagination'
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation("com.netflix.graphql.dgs:graphql-dgs-extended-scalars")
    implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.1'))
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
            'io.jsonwebtoken:jjwt-jackson:0.11.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"]
    packageName = 'com.umcs.enterprise'
    typeMapping = ["BookConnection" : "graphql.relay.SimpleListConnection<Book>",
                   "OrderConnection": "graphql.relay.SimpleListConnection<Order>",
                    "Upload": "org.springframework.web.multipart.MultipartFile",
                   "Query": "Object"]
}

tasks.named('test') {
    useJUnitPlatform()
}
