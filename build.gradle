plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.netflix.dgs.codegen" version "5.11.1"
    id 'com.github.node-gradle.node' version '5.0.0'
}

group = 'com.umcs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-pagination'
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation("com.netflix.graphql.dgs:graphql-dgs-extended-scalars")
    implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:7.2.0'))
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-oauth2-authorization-server"
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation("com.cloudinary:cloudinary-http44:1.33.0")
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.security:spring-security-test'


}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"]
    packageName = 'com.umcs.enterprise'

    typeMapping = ["Upload": "org.springframework.web.multipart.MultipartFile",
                   "Basket":"com.umcs.enterprise.basket.Basket",
                   "User":"com.umcs.enterprise.user.User",
                   "Admin":"com.umcs.enterprise.user.User",
                   "Viewer":"com.umcs.enterprise.user.Viewer",
                   "Book":"com.umcs.enterprise.book.Book",
                   "Purchase":"com.umcs.enterprise.purchase.Purchase",
                   "Node":"com.umcs.enterprise.node.Node",
                   "UUID":"java.util.UUID",
                   "BasketBookEdge":"graphql.relay.Edge<com.umcs.enterprise.basket.BookEdge>"]
}

tasks.named('test') {
    useJUnitPlatform()
}
