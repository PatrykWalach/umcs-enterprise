

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'application'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.netflix.dgs.codegen" version "5.7.0"
    id 'com.github.node-gradle.node' version '3.5.1'
//    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'com.umcs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
mainClassName = 'com.umcs.enterprise.EnterpriseApplication'




shadowJar {
    mergeServiceFiles()
}

configurations {
    compileOnly {

        extendsFrom annotationProcessor
    }
}

compileJava.options.encoding = 'UTF-8'



repositories {
    mavenCentral()
}

dependencies {

    implementation "com.cloudinary:cloudinary-http44:1.33.0"
//      implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//      implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation 'org.hibernate.orm:hibernate-core:6.2.3.Final'
//      implementation 'org.hibernate.orm:hibernate-community-dialects'
//      implementation 'org.liquibase:liquibase-core'
//      implementation 'org.liquibase.ext:liquibase-hibernate6'
//      implementation 'org.slf4j:slf4j-api'
//      implementation 'org.slf4j:slf4j-simple'
//      implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.springframework:spring-aspects'
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-jdbc'
//      implementation 'org.springframework:spring-orm'
//      implementation 'org.springframework:spring-web'
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework.data:spring-data-ldap'
    implementation 'org.springframework.data:spring-data-jdbc'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.springframework.graphql:spring-graphql'
    implementation 'org.springframework.security:spring-security-config'
//      implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5',
            'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema"]
    packageName = 'com.umcs.enterprise'
    typeMapping = ["Upload": "org.springframework.web.multipart.MultipartFile", "UUID":"java.util.UUID", "Basket":"com.umcs.enterprise.basket.Basket"]
}

tasks.named('test') {
    useJUnitPlatform()
}
