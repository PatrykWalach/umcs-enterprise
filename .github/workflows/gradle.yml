name: Test

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

permissions:
  contents: read

env:
  CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
  CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_ONLY: true

jobs:
  build:
    name: Gradle build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - run: chmod +x ./gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

  e2e-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [default, no-js, mobile]

    name: E2E
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - run: chmod +x ./gradlew

      - name: Run E2E tests ðŸ§ª
        run: npm exec turbo test -- -- --project=${{ matrix.project }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.project }}-playwright-report
          path: playwright-report

  eslint:
    runs-on: ubuntu-latest

    name: Lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: Lint
        run: npm exec turbo lint

  format:
    runs-on: ubuntu-latest
    name: Format
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: Format
        run: npm exec turbo format

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'refactor: run format'

  svelte-check:
    runs-on: ubuntu-latest

    name: Typecheck
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies ðŸ“¦
        run: npm ci

      - name: Svelte Check
        run: npm exec turbo check
