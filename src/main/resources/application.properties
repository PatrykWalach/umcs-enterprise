
spring.jpa.hibernate.ddl-auto=create
spring.jpa.defer-datasource-initialization=true

spring.jpa.datasource.driver-class-name=org.h2.Driver
spring.jpa.datasource.url=jdbc:h2:mem:AZ
spring.jpa.database=h2

logging.level.org.springframework=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

server.servlet.session.cookie.same-site=lax

spring.sql.init.mode=always


spring.security.authentication.jwt.secret=VW5kZXJzdGFuZGFibHktRGVsaWdodGZ1bC1PcmJpdC0wMTYxLTg0MTctOTI1OC0wOTkzLTAzNDItODI5OS0wOA


spring.config.import=optional:file:.env[.properties]
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}



spring.security.oauth2.client.registration.newClient.client-id=newClient
spring.security.oauth2.client.registration.newClient.client-secret=newClientSecret
spring.security.oauth2.client.registration.newClient.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.newClient.scope=profile, read, write
spring.security.oauth2.client.provider.newClient.token-uri=http://localhost:8080/oauth2/token


server.port=8080
#server.servlet.context-path=/resource-server

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8083/auth/realms/enterprise
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8083/auth/realms/enterprise/protocol/openid-connect/certs